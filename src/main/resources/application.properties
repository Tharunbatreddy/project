spring.application.name=proj
# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Connection Pool settings (optional)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5

# JWT configuration settings
jwt.secret=MY_SUPER_SECURE_RANDOM_256BIT_SECRET_KEY!
jwt.expiration=3600000


# Kafka Consumer Configuration for receiving team name
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=proj-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Kafka Producer Configuration for sending job details
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka Topics Configuration
kafka.topic.work=work         # Topic where team name is sent to the Job microservice
kafka.topic.tasks=tasks       # Topic where job descriptions are received from Job microservice
